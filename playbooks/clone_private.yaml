- name: Clone Private Git Repo
  hosts: nodes

  vars:
    GIT_REPO: "{{ lookup('env', 'GIT_REPO' }}"
    CLONE_DEST: "{{ lookup('env', 'CLONE_DEST' }}"

    KEY_PATH: "{{ lookup('env', 'KEY_PATH', default='~/.ssh/id_ed25519'}}"
    KNOWN_HOSTS_PATH: "{{ lookup('env', 'KNOWN_HOSTS_PATH', default='~/.ssh/known_hosts'}}"

  tasks:
    - name: Check if SSH key is already present
      stat:
        path: "{{ KEY_PATH }}"
      register: key_stat_result

    - name: Generate SSH key for accessing GitHub
      command: "ssh-keygen -t rsa -f {{ KEY_PATH }} -N ''"
      when: not key_stat_result.stat.exists

    - name: Get key content
      command: "cat {{ KEY_PATH }}.pub"
      register: key_content

    - name: Check if known_host exists
      stat:
        path: "{{ KNOWN_HOSTS_PATH }}"
      register: known_hosts_stat

    - name: Create known_hosts if it doesn't exist
      file:
        path: "{{ KNOWN_HOSTS_PATH }}"
        state: touch
      when: not known_hosts_stat.stat.exists

    - name: Get the content of known hosts
      shell: "cat {{ KNOWN_HOSTS_PATH }} | grep github.com"
      register: host_stat
      failed_when: host_stat.rc > 1

    - name: Modify known hosts
      block:
        - name: Fetch GitHub public key
          command: ssh-keyscan -T 10 github.com
          register: keyscan

        - name: Add GitHub public key to ssh known_hosts
          lineinfile:
            path: "{{ KNOWN_HOSTS_PATH }}"
            create: yes
            line: "{{ item }}"
          with_items: "{{ keyscan.stdout_lines }}"
          when: host_stat.rc == 1

    - name: Add SSH public key to GitHub account
      uri:
        url: https://api.github.com/user/keys
        validate_certs: no
        method: POST
        body:
          title: "{{ KEY_TITLE }}"
          key: "{{ key_content.stdout }}"
        body_format: json
        headers:
          Content-Type: "application/json"
          Authorization: "token {{ GITHUB_ACCESS_TOKEN }}"
      register: task_log
      failed_when: task_log.content.find('key is already in use') == 0

    - name: Clone the repository
      shell: GIT_SSH_COMMAND="ssh -i {{ KEY_PATH }} -v -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" {{ GIT_EXECUTABLE }} clone {{ GIT_REPO }} {{ CLONE_DEST }}
